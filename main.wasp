app doc_auto123 {
  wasp: {
    version: "^0.11.1"
  },
  title: "doc_auto123",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity Document {=psl
    id             Int    @id @default(autoincrement())
    filepath       String @unique
    filledFilepath String
    userId         Int
    User           User   @relation(fields: [userId], references: [id])
psl=}

entity User {=psl
    id        Int        @id @default(autoincrement())
    username  String     @unique
    password  String
    documents Document[]
psl=}

action uploadDocument {
  fn: import { uploadDocument } from "@server/actions.js",
  entities: [Document]
}

action fillDocument {
  fn: import { fillDocument } from "@server/actions.js",
  entities: [Document]
}

query getDocuments {
  fn: import { getDocuments } from "@server/queries.js",
  entities: [Document, User]
}

query getDocument {
  fn: import { getDocument } from "@server/queries.js",
  entities: [Document]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/HomePage.jsx",
  authRequired: false
}

route DocumentRoute { path: "/documents/:documentId", to: DocumentPage }
page DocumentPage {
  component: import { DocumentPage } from "@client/pages/DocumentPage.jsx",
  authRequired: false
}
